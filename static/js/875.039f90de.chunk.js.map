{"version":3,"file":"static/js/875.039f90de.chunk.js","mappings":"4MACA,EAA4B,6BAA5B,EAAmE,2BAAnE,EAAqG,wBAArG,EAA4I,gCAA5I,EAAkL,uBAAlL,EAAsN,8B,mBCEzMA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAaf,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcH,SAAA,EAC5BF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAYH,SAAC,YAC7BC,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAdnC,SAAqBC,GACnBA,EAAIC,iBACJ,IAAMC,EAAe,CACnBC,MAAOH,EAAII,OAAOC,SAASF,MAAMG,MACjCC,SAAUP,EAAII,OAAOC,SAASE,SAASD,OAEvCf,GAASiB,EAAAA,EAAAA,IAAWN,IACtBF,EAAII,OAAOK,OACb,EAMyDd,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,SACEiB,SAAS,GACTC,aAAa,MACbC,KAAK,QACLC,KAAK,QACLC,GAAG,WAELrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,QAAOpB,SAAC,cAE3BC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeH,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SACEiB,SAAS,GACTC,aAAa,MACbC,KAAK,WACLC,KAAK,WACLC,GAAG,cAELrB,EAAAA,EAAAA,KAAA,SAAOsB,QAAQ,WAAUpB,SAAC,iBAE9BF,EAAAA,EAAAA,KAAA,OAAKI,UAAWC,EAAiBH,UAC/BF,EAAAA,EAAAA,KAAA,UAAQI,UAAWC,EAAQH,SAAC,oBAQxC,ECtCA,EARkB,WACd,IAAMqB,GAAaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKH,UAAU,IAC7D,OACIvB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKqB,GAAavB,EAAAA,EAAAA,KAAC2B,EAAAA,GAAQ,CAACC,GAAG,eAAkB5B,EAAAA,EAAAA,KAACH,EAAS,KAGnE,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","Pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"heading\":\"LoginForm_heading__ACT8n\",\"form\":\"LoginForm_form__gPEx5\",\"btnContainer\":\"LoginForm_btnContainer__VTOgn\",\"btn\":\"LoginForm_btn__B2KLK\",\"inputField\":\"LoginForm_inputField__1zwZE\",\"passicon\":\"LoginForm_passicon__eL+9C\",\"close\":\"LoginForm_close__9i-U0\",\"span\":\"LoginForm_span__NyPoY\"};","import { useDispatch } from 'react-redux'\nimport css from './LoginForm.module.css'\nimport { loginThunk } from '../../redux/auth/authOperations';\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n\n  function handelLogin(evt) {    \n    evt.preventDefault()\n    const userLoginObj = {\n      email: evt.target.elements.email.value,\n      password: evt.target.elements.password.value\n    }\n      dispatch(loginThunk(userLoginObj))  \n    evt.target.reset()\n  }\n\n    return (\n      <>\n        <div className={css.container}>\n          <div className={css.heading}>Log in</div>\n          <form className={css.form} onSubmit={handelLogin}>                    \n            <div className={css.inputField}>\n              <input\n                required=\"\"\n                autoComplete=\"off\"\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n              />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          <div className={css.inputField}>\n              <input\n                required=\"\"\n                autoComplete=\"off\"\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n              />\n              <label htmlFor=\"username\">Password</label>\n          </div>\n          <div className={css.btnContainer}>\n            <button className={css.btn}>Log in</button>      \n          </div>\n          </form>\n        </div>\n      </>\n           \n        \n    )\n}","import { Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { LoginForm } from \"components/LoginForm/LoginForm\";\n\n\nconst LoginPage = () => {\n    const isLoggedIn = useSelector(state => state.auth.isLoggedIn)\n    return (\n        <>            \n            {isLoggedIn ? <Navigate to='/contacts' />  : <LoginForm />}\n        </>\n    )\n}\nexport default LoginPage"],"names":["LoginForm","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","className","css","onSubmit","evt","preventDefault","userLoginObj","email","target","elements","value","password","loginThunk","reset","required","autoComplete","type","name","id","htmlFor","isLoggedIn","useSelector","state","auth","Navigate","to"],"sourceRoot":""}